package ProyectoFinalVista;

import static java.lang.Integer.parseInt;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import proyectofinal.accesoADatos.*;
import proyectofinal.Entidades.*;

/**
 *
 * @author usuario
 */
public class Contrato_Alquiler extends javax.swing.JInternalFrame {
private Connection con= null;
    ContratoAlquilerData caD= new ContratoAlquilerData();
    /**
     * Creates new form ContratoAlquiler
     */
    public Contrato_Alquiler() {
        initComponents();
        con= Conexion.getConexion();
        cargarCombo();
        cargarCombo2(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jbCrearContrato = new javax.swing.JButton();
        jbRenovarContrato = new javax.swing.JButton();
        jbCancelarContrato = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jbSalir = new javax.swing.JButton();
        jcInquilinos = new javax.swing.JComboBox<>();
        jcPropiedades = new javax.swing.JComboBox<>();
        jrbEstado = new javax.swing.JRadioButton();
        jDateChooser4 = new com.toedter.calendar.JDateChooser();
        jDateChooser5 = new com.toedter.calendar.JDateChooser();
        jDateChooser6 = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(102, 102, 255));

        jLabel3.setText("Inquilino:");

        jLabel4.setText("Fecha Final:");

        jLabel5.setText("Fecha Inicio:");

        jLabel6.setText("Fecha de Realizacion:");

        jLabel7.setText("Marca:");

        jLabel8.setText("Propiedad:");

        jLabel9.setText("Vendedor:");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField5KeyTyped(evt);
            }
        });

        jbCrearContrato.setText("Crear");
        jbCrearContrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCrearContratoActionPerformed(evt);
            }
        });

        jbRenovarContrato.setText("Renovar");

        jbCancelarContrato.setText("Cancelar");

        jLabel10.setText("Estado:");

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jcInquilinos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcInquilinosActionPerformed(evt);
            }
        });

        jcPropiedades.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jbCrearContrato)
                        .addGap(74, 74, 74)
                        .addComponent(jbRenovarContrato)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                        .addComponent(jbCancelarContrato))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel4)
                            .addComponent(jLabel10)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcPropiedades, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcInquilinos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jDateChooser6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jrbEstado)
                                    .addComponent(jDateChooser4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDateChooser5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(78, 78, 78)
                .addComponent(jbSalir)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcInquilinos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jDateChooser4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jDateChooser5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jDateChooser6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jcPropiedades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jrbEstado))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCrearContrato)
                    .addComponent(jbRenovarContrato)
                    .addComponent(jbCancelarContrato)
                    .addComponent(jbSalir))
                .addGap(0, 17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
         int resp = JOptionPane.showConfirmDialog(this, "Estás seguro que quieres salir?", "Cerrar Ventana", JOptionPane.YES_NO_OPTION);
        if (resp == JOptionPane.YES_OPTION){
            this.dispose();
        }
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jcInquilinosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcInquilinosActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jcInquilinosActionPerformed

    private void jbCrearContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCrearContratoActionPerformed
        // TODO add your handling code here:
        guardar(); 
        jDateChooser4.setDate(null);
        jDateChooser5.setDate(null);
        jDateChooser6.setDate(null);
        jrbEstado.setSelected(true);
        jTextField3.setText("");
        jTextField5.setText("");
       
         //int id = Integer.parseInt(jTextField1.getText());
//        Inquilino inquilino = (Inquilino)jcInquilinos.getSelectedItem();
//        
//        SimpleDateFormat formatoFecha = new SimpleDateFormat("dd-MM-yyyy");
//        String fecha_final = formatoFecha.format(jDateChooser4.getDate());
//        LocalDate fechFin = LocalDate.parse(fecha_final, DateTimeFormatter.ofPattern("dd-MM-yyyy"));
//        String fecha_inicio = formatoFecha.format(jDateChooser5.getDate());
//        LocalDate fechIn = LocalDate.parse(fecha_inicio, DateTimeFormatter.ofPattern("dd-MM-yyyy"));
//        String fecha_realizacion = formatoFecha.format(jDateChooser6.getDate());
//        LocalDate fechRea = LocalDate.parse(fecha_realizacion, DateTimeFormatter.ofPattern("dd-MM-yyyy"));
//        char marca = jTextField3.getText().charAt(0);
//        PropiedadInmueble propiedad= (PropiedadInmueble)jcPropiedades.getSelectedItem();
//        String vendedor= jTextField5.getText();
//        
//               
//       ContratoAlquiler cal = new ContratoAlquiler(inquilino, fechFin, fechIn, fechRea, marca,propiedad, vendedor,true);
//        caD.crearContrato(cal);
//        jTextField3.setText("");
//        jTextField5.setText("");

        
    }//GEN-LAST:event_jbCrearContratoActionPerformed

    private void jTextField5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
       if(!Character.isLetter(c) && c != ' ') {
        evt.consume();
       }
    }//GEN-LAST:event_jTextField5KeyTyped

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser jDateChooser4;
    private com.toedter.calendar.JDateChooser jDateChooser5;
    private com.toedter.calendar.JDateChooser jDateChooser6;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JButton jbCancelarContrato;
    private javax.swing.JButton jbCrearContrato;
    private javax.swing.JButton jbRenovarContrato;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Inquilino> jcInquilinos;
    private javax.swing.JComboBox<PropiedadInmueble> jcPropiedades;
    private javax.swing.JRadioButton jrbEstado;
    // End of variables declaration//GEN-END:variables


    private void cargarCombo(){ 
        
        InquilinoData inqD = new InquilinoData();
        ArrayList<Inquilino> inquilino = new ArrayList<>();

        for (Inquilino inqui : inqD.obtenerLosInquilinos()) {
            inquilino.add(inqui);
            jcInquilinos.addItem(inqui);
            //System.out.println(inqui);
        }

    }
    
     private void cargarCombo2(){ 
        
        PropiedadInmuebleData piD = new PropiedadInmuebleData();
        ArrayList<PropiedadInmueble> propiedad = new ArrayList<>();

        for (PropiedadInmueble prop : piD.obtenerLasPropiedades()) {
            propiedad.add(prop);
            jcPropiedades.addItem(prop);
            //System.out.println(prop);
            
        }
    }
     
     public void guardar() {
        try {
            if (jcInquilinos.getSelectedItem()!= null && jDateChooser4.getDate()!= null &&jDateChooser5.getDate()!= null && jDateChooser6.getDate()!= null && !jTextField3.getText().isEmpty() && jcPropiedades.getSelectedItem()!= null && !jTextField5.getText().isEmpty() &&  jDateChooser4.getDate()!=null && jrbEstado.isSelected() == true ) {

                
                Inquilino inquilino = (Inquilino)jcInquilinos.getSelectedItem();
                LocalDate fecha_final = jDateChooser4.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                LocalDate fecha_inicio = jDateChooser5.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                LocalDate fecha_realizacion = jDateChooser6.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                char marca = jTextField3.getText().charAt(0);
                PropiedadInmueble propiedad= (PropiedadInmueble)jcPropiedades.getSelectedItem();        
                String vendedor= jTextField5.getText();                              
                boolean estado = jrbEstado.isSelected();
                
            ContratoAlquiler cal = new ContratoAlquiler(10,inquilino,fecha_final,fecha_inicio,fecha_realizacion, marca, propiedad, vendedor, estado);
            
            //ContratoAlquiler co= new ContratoAlquiler(8,inq, LocalDate.of(2028,8,23),LocalDate.of(2021,8,12),LocalDate.of(2013,10,10),'B',mi,"Alberto",true);
            caD.crearContrato(cal); 
                
            } 
            else if (jTextField5.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "No debe dejar el campo del Vendedor vacio");
            } else if (jDateChooser4.getDate() == null) {
                JOptionPane.showMessageDialog(this, "No debe dejar el campo Fecha Final");
            } else if (jDateChooser5.getDate()==null){
                JOptionPane.showMessageDialog(this, "No debe dejar el campo Fecha Inicio");    
            } else if (jDateChooser4.getDate()==null){
                JOptionPane.showMessageDialog(this, "No debe dejar el campo Fecha de Realizacion");
            } else if (jTextField3.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "No debe dejar la Marca vacia");
            } 
            //else if (jcPropiedades.getSelectedItem()==null){
                //JOptionPane.showMessageDialog(this, "Debe seleccionar una Propiedad");
            //} 
             else if (jTextField5.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "No debe dejar el Vendedor vacio");
            }
            else if (jrbEstado.isSelected() == false) {
                JOptionPane.showMessageDialog(this, "Debe dejar activado el campo estado");
            }

        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "No debe dejar campos vacios");
        }
    }
//    Me da un error de "[ WARN] (AWT-EventQueue-0) Error: 1452-23000: Cannot add or update a child row: a foreign key constraint fails (`inmobiliaria_pf`.`contratoalquiler`, CONSTRAINT `c2` FOREIGN KEY (`Propiedad`) REFERENCES `propiedadinmueble` (`ID_Local`))
//    " cuando quiero crear un contrato alquiler
//

}
